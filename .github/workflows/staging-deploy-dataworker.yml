name: .NET CI/CD

on:
  push:
    branches: [ master ]
    paths:
      - Common
      - Database
      - DataWorkerService
      - DataWorkerService.Tests
      - OsuApiClient
      - OsuApiClient.Tests
      - TestingUtils

jobs:
  build_test:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'

    - name: Restore Dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build ./DataWorkerService/DataWorkerService.csproj -c Release

    - name: Test
      run: dotnet test ./DataWorkerService.Tests/DataWorkerService.Tests.csproj -c Release --verbosity normal

  publish:
    needs: build_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: stagecodes
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push Docker Image
        run: |
          docker build -t stagecodes/otr-data-processor-staging .
          docker push stagecodes/otr-data-processor-staging

  deploy:
    environment: Staging
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Create .env files
        run: |
          echo "${{ secrets.APP_ENV }}" > app.env
          echo "${{ secrets.DB_ENV }}" > db.env
          echo "${{ secrets.POSTGRES_EXPORTER_ENV }}" > postgres_exporter.env
      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "app.env,db.env,postgres_exporter.env,docker-compose-staging.yml,otel-collector-config.yml,prometheus.yml"
          target: "~/otr-api/"
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/otr-api
            docker compose -f docker-compose-staging.yml pull
            docker compose -f docker-compose-staging.yml up -d --build