using System.ComponentModel.DataAnnotations.Schema;
using System.Diagnostics.CodeAnalysis;

namespace Database.Entities.Processor;

/// <summary>
/// Describes an individual change to the <see cref="BaseStats.Rating"/> of a <see cref="BaseStats"/> relative
/// to a single <see cref="Entities.Match"/>
/// </summary>
/// <remarks>
/// Generated by the <a href="https://github.com/osu-tournament-rating/otr-processor">o!TR Processor</a>
/// </remarks>
[Table("match_rating_stats")]
[SuppressMessage("ReSharper", "EntityFramework.ModelValidation.CircularDependency")]
public class MatchRatingStats : EntityBase
{
    /// <summary>
    /// Match cost
    /// </summary>
    [Column("match_cost")]
    public double MatchCost { get; init; }

    /// <summary>
    /// Rating before the <see cref="Match"/> was considered
    /// </summary>
    [Column("rating_before")]
    public double RatingBefore { get; init; }

    /// <summary>
    /// Rating after the <see cref="Match"/> was considered
    /// </summary>
    [Column("rating_after")]
    public double RatingAfter { get; init; }

    /// <summary>
    /// Total change in rating
    /// </summary>
    [Column("rating_change")]
    public double RatingChange { get; init; }

    /// <summary>
    /// Volatility before the <see cref="Match"/> was considered
    /// </summary>
    [Column("volatility_before")]
    public double VolatilityBefore { get; init; }

    /// <summary>
    /// Volatility after the <see cref="Match"/> was considered
    /// </summary>
    [Column("volatility_after")]
    public double VolatilityAfter { get; init; }

    /// <summary>
    /// Total change in volatility
    /// </summary>
    [Column("volatility_change")]
    public double VolatilityChange { get; init; }

    /// <summary>
    /// Global rank before the <see cref="Match"/> was considered
    /// </summary>
    [Column("global_rank_before")]
    public int GlobalRankBefore { get; init; }

    /// <summary>
    /// Global rank after the <see cref="Match"/> was considered
    /// </summary>
    [Column("global_rank_after")]
    public int GlobalRankAfter { get; init; }

    /// <summary>
    /// Total change in global rank
    /// </summary>
    [Column("global_rank_change")]
    public int GlobalRankChange { get; init; }

    /// <summary>
    /// Country rank before the <see cref="Match"/> was considered
    /// </summary>
    [Column("country_rank_before")]
    public int CountryRankBefore { get; init; }

    /// <summary>
    /// Country rank after the <see cref="Match"/> was considered
    /// </summary>
    [Column("country_rank_after")]
    public int CountryRankAfter { get; init; }

    /// <summary>
    /// Total change in country rank
    /// </summary>
    [Column("country_rank_change")]
    public int CountryRankChange { get; init; }

    /// <summary>
    /// Rating percentile before the <see cref="Match"/> was considered
    /// </summary>
    [Column("percentile_before")]
    public double PercentileBefore { get; init; }

    /// <summary>
    /// Rating percentile after the <see cref="Match"/> was considered
    /// </summary>
    [Column("percentile_after")]
    public double PercentileAfter { get; init; }

    /// <summary>
    /// Total change in rating percentile
    /// </summary>
    [Column("percentile_change")]
    public double PercentileChange { get; init; }

    /// <summary>
    /// Average rating of the <see cref="Player"/>'s teammates
    /// Null if the <see cref="Tournament"/>'s team size is 1
    /// </summary>
    [Column("average_teammate_rating")]
    public double? AverageTeammateRating { get; init; }

    /// <summary>
    /// Average rating of the <see cref="Player"/>'s opponents.
    /// Null if the <see cref="Tournament"/>'s team size is 1
    /// </summary>
    [Column("average_opponent_rating")]
    public double? AverageOpponentRating { get; init; }

    /// <summary>
    /// Id of the <see cref="Entities.Player"/> the rating stat was generated for
    /// </summary>
    [Column("player_id")]
    public int PlayerId { get; init; }

    /// <summary>
    /// The <see cref="Entities.Player"/> the rating stat was generated for
    /// </summary>
    public Player Player { get; init; } = null!;

    /// <summary>
    /// Id of the <see cref="Entities.Match"/> the rating stat was generated for
    /// </summary>
    [Column("match_id")]
    public int MatchId { get; init; }

    /// <summary>
    /// The <see cref="Entities.Match"/> the rating stat was generated for
    /// </summary>
    public Match Match { get; init; } = null!;
}
