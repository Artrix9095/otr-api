using System.ComponentModel.DataAnnotations.Schema;
using Database.Enums;

namespace Database.Entities.Processor;

/// <summary>
/// Represents a collection of current rating information for a <see cref="Player"/> on a <see cref="Enums.Ruleset"/>
/// </summary>
/// <remarks>
/// Generated by the <a href="https://github.com/osu-tournament-rating/otr-processor">o!TR Processor</a>
/// <br></br>
/// <br></br>
/// A <see cref="Player"/> may only have one BaseStat per <see cref="Enums.Ruleset"/> at any given time.
/// If a <see cref="Player"/> does not own a BaseStat for a <see cref="Enums.Ruleset"/>, that means they do not have
/// <i>any</i> rating data for the <see cref="Enums.Ruleset"/> (Read: They do not play tournaments in that mode).
/// <br></br>
/// <br></br>
/// For more in depth documentation, see
/// <a href="https://github.com/osu-tournament-rating/otr-wiki/blob/master/algorithm/ratings/en.md">
/// o!TR Ratings Wiki
/// </a>
/// </remarks>
[Table("base_stats")]
public class BaseStats : EntityBase
{
    /// <summary>
    /// The <see cref="Enums.Ruleset"/> that the <see cref="BaseStats"/> was generated for
    /// </summary>
    [Column("ruleset")]
    public Ruleset Mode { get; init; }

    /// <summary>
    /// osu! Tournament Rating... The number we're all here for!
    /// </summary>
    [Column("rating")]
    public double Rating { get; set; }

    /// <summary>
    /// Measure of how "strong" a single change in <see cref="Rating"/> can be
    /// </summary>
    [Column("volatility")]
    public double Volatility { get; init; }

    /// <summary>
    /// Global <see cref="Rating"/> percentile
    /// </summary>
    [Column("percentile")]
    public double Percentile { get; init; }

    /// <summary>
    /// Global rank
    /// </summary>
    [Column("global_rank")]
    public int GlobalRank { get; init; }

    /// <summary>
    /// Country rank
    /// </summary>
    [Column("country_rank")]
    public int CountryRank { get; init; }

    /// <summary>
    /// Average match cost over all <see cref="Match"/>es
    /// </summary>
    [Column("match_cost_average")]
    public double MatchCostAverage { get; init; }

    /// <summary>
    /// Id of the <see cref="Player"/> that the <see cref="BaseStats"/> was generated for
    /// </summary>
    [Column("player_id")]
    public int PlayerId { get; init; }

    /// <summary>
    /// The <see cref="Player"/> that the <see cref="BaseStats"/> was generated for
    /// </summary>
    public Player Player { get; init; } = null!;
}
